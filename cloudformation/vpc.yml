AWSTemplateFormatVersion: "2010-09-09"
Resources:
  vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:
          "Fn::Join": ["", [Ref: AppName, "-vpc"]]
      - Key: App
        Value:
          Ref: AppName
  igv:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          "Fn::Join": ["", [Ref: AppName, "-igv"]]
      - Key: App
        Value:
          Ref: AppName
  igvAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: igv
      VpcId:
        Ref: vpc
  publicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc
      Tags:
      - Key: Name
        Value:
          "Fn::Join": ["", [Ref: AppName, "-public-route-table"]]
      - Key: App
        Value:
          Ref: AppName
  publicRoute:
    DependsOn: igv
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Ref: igv
  publicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc
      CidrBlock:
        Ref: PublicSubnet1CidrBlock
      AvailabilityZone:
        "Fn::Select": [0, "Fn::GetAZs": ""]
      Tags:
      - Key: Name
        Value:
          "Fn::Join": ["", [Ref: AppName, "-public-subnet1"]]
      - Key: App
        Value:
          Ref: AppName
  publicSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: publicRouteTable
      SubnetId:
        Ref: publicSubnet1
  publicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc
      CidrBlock:
        Ref: PublicSubnet2CidrBlock
      AvailabilityZone:
        "Fn::Select": [1, "Fn::GetAZs": ""]
      Tags:
      - Key: Name
        Value:
          "Fn::Join": ["", [Ref: AppName, "-public-subnet2"]]
      - Key: App
        Value:
          Ref: AppName
  publicSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: publicRouteTable
      SubnetId:
        Ref: publicSubnet2
Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: "The CIDR block you want the VPC to cover."
  PublicSubnet1CidrBlock:
    Type: String
    Default: 10.0.128.0/20
    Description: "The CIDR block you want the subnet A to cover."
  PublicSubnet2CidrBlock:
    Type: String
    Default: 10.0.16.0/20
    Description: "The CIDR block you want the subnet B to cover."
  AppName:
    Type: String
    Default: myapp
    Description: "The application name."
Outputs:
  VpcId:
    Value:
      Ref: vpc
    Description: "VPC ID"
  PublicSubnet1Id:
    Value:
      Ref: publicSubnet1
    Description: "Public Subnet ID in AZ1"
  PublicSubnet2Id:
    Value:
      Ref: publicSubnet2
    Description: "Public Subnet ID in AZ2"